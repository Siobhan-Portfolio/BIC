{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/home/siobhan/git/personal/BIC/BICCW2/BIC/src/main.js"
  ],
  "names": [],
  "mappings": "AAAA;;;;;;;;ACKA,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;;AAEtC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAS,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;AA+B1C,QAAM,CAAC,OAAO,CAAC;AACf,QAAM,CAAC,OAAO,CAAC;AACf,QAAM,CAAC,UAAU,CAAC;AAClB,QAAM,CAAC,WAAW,CAAC;;AAInB,MAAI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;AAoBjB,MAAI,YAAY,GAAG,SAAf,YAAY,CAAY,KAAK,EAAC,SAAS,EAAC;AAC1C,QAAG,KAAK,IAAE,SAAS,EAAC;;AAElB,aAAO,CAAC,CAAC;KACV,MACG;;AAEF,aAAO,CAAC,CAAC,CAAC;KACX;GACF,CAAA;;AAED,MAAI,UAAU,GAAG,SAAb,UAAU,CAAY,KAAK,EAAE,QAAQ,EAAC;AACxC,SAAK,GAAG,KAAK,GAAG,QAAQ,CAAC;AACzB,QAAI,IAAI,GAAG,AAAC,CAAC,IAAE,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAA,AAAC,GAAI,CAAC,CAAC;;AAEhD,WAAO,IAAI,CAAC;GAEb,CAAA;;AAED,MAAI,WAAW,GAAG,SAAd,WAAW,CAAY,KAAK,EAAE,QAAQ,EAAC;;AAEzC,QAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,CAAC;;AAErC,WAAO,IAAI,CAAC;GAEb,CAAA;;AAED,MAAI,eAAe,GAAG,SAAlB,eAAe,CAAY,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAC;;AAEnD,QAAG,KAAK,IAAE,GAAG,EAAC;;AAEZ,aAAO,CAAC,CAAC,CAAC;KACX;AACD,QAAG,KAAK,IAAE,GAAG,EAAC;;AAEZ,aAAO,CAAC,CAAC;KACV,MACI;AACH,UAAI,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC;;AAExB,aAAQ,IAAI,CAAE;KACf;GAEF,CAAA;;AAED,MAAI,QAAQ,GAAG,SAAX,QAAQ,CAAY,KAAK,EAAC;;AAE9B,QAAI,YAAY,GAAG,CAAC,GAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAE,IAAI,CAAC,EAAE,CAAC,CAAC;;AAG5C,QAAI,IAAI,GAAG,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;;;;AAI3D,WAAO,IAAI,CAAC;GAEX,CAAA;;;;;;AASD,MAAI,UAAU,GAAG,SAAb,UAAU,CAAY,KAAK,EAAE,OAAO,EAAE,SAAS,EAAC;;;AAGlD,QAAI,CAAC,CAAC,GAAG,EAAE,CAAC;AACZ,QAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACf,QAAI,CAAC,CAAC,GAAG,EAAE,CAAC;AACZ,QAAI,CAAC,CAAC,GAAG,OAAO,CAAC;AACjB,QAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;;AAG3B,QAAI,IAAI,GAAG,CAAC,CAAC;;AAEb,QAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AACb,QAAI,OAAO,GAAG,CAAC,CAAC;;AAEhB,SAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC3C,aAAO,GAAG,OAAO,GAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC,CAAC;KAC3C,CAAC;;AAEF,WAAO,GAAG,OAAO,GAAG,IAAI,CAAC;AACzB,QAAI,CAAC,GAAG,GAAG,OAAO,CAAC;;AAEnB,YAAO,SAAS;AACd,WAAK,CAAC;AACA,YAAI,CAAC,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,cAAM;AAAA,AACZ,WAAK,CAAC;AACA,YAAI,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,cAAM;AAAA,AACZ,WAAK,CAAC;AACA,YAAI,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,cAAM;AAAA,AACZ,WAAK,CAAC;AACA,YAAI,CAAC,MAAM,GAAI,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACvD,cAAM;AAAA,AACZ,WAAK,CAAC;AACA,YAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC,cAAM;AAAA,AACZ;AACM,YAAI,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpC,eAAO,CAAC,GAAG,CAAC,gHAAgH,CAAC,CAAC;AAAA,KACrI;GAEF,CAAA;;;;;;AAQD,MAAI,gBAAgB,GAAG,SAAnB,gBAAgB,CAAY,KAAK,EAAC,OAAO,EAAE,KAAK,EAAC;AACnD,QAAI,OAAO,GAAG,IAAI,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE5D,WAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACpC,WAAO,CAAC,GAAG,CAAC,SAAS,GAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAClC,WAAO,CAAC,GAAG,CAAC,UAAU,GAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACnC,WAAO,CAAC,GAAG,CAAC,OAAO,GAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAClC,WAAO,CAAC,GAAG,CAAC,UAAU,GAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AACxC,WAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,WAAO,OAAO,CAAC;GAChB,CAAA;;AAED,MAAI,WAAW,GAAG,SAAd,WAAW,CAAY,SAAS,EAAE,OAAO,EAAE,KAAK,EAAC;;AAEnD,QAAI,QAAQ,GAAG,IAAI,UAAU,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,QAAI,QAAQ,GAAG,IAAI,UAAU,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,QAAI,QAAQ,GAAG,IAAI,UAAU,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,QAAI,QAAQ,GAAG,IAAI,UAAU,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,QAAI,QAAQ,GAAG,IAAI,UAAU,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEvE,WAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACpC,WAAO,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AACrC,WAAO,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AACrC,WAAO,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AACrC,WAAO,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AACrC,WAAO,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;;;;;;;AAOrC,WAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,QAAI,WAAW,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAErE,WAAO,WAAW,CAAC;GAEpB,CAAA;;AAED,MAAI,WAAW,GAAG,SAAd,WAAW,CAAY,WAAW,EAAC,OAAO,EAAC,KAAK,EAAC;AACnD,QAAI,UAAU,GAAG,IAAI,UAAU,CACzB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EACrB,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EACrB,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EACrB,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EACrB,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CACrB,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE7B,WAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,WAAO,CAAC,GAAG,CAAC,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AACtC,WAAO,CAAC,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;AAC5C,WAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,WAAO,UAAU,CAAC;GACrB,CAAA;;;;;;AAMD,MAAI,gBAAgB,GAAG,SAAnB,gBAAgB,GAAa;AAC/B,QAAI,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EACnC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EACf,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EACf,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EACf,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EACf,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EACf,CAAC,IAAI,CAAC,MAAM,EAAE,EAAC,IAAI,CAAC,MAAM,EAAE,EAAC,IAAI,CAAC,MAAM,EAAE,EAAC,IAAI,CAAC,MAAM,EAAE,EAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CACtE,CAAC;;AAEb,QAAI,KAAK,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;;AAE9B,QAAI,MAAM,GAAG,gBAAgB,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC/D,QAAI,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AACjD,QAAI,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;;AAEjD,QAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;;AAExC,QAAI,SAAS,GAAG;AACE,eAAS,EAAE,OAAO;AAClB,aAAO,EAAE,KAAK;AACd,kBAAY,EAAE,MAAM;AACpB,mBAAa,EAAE,MAAM;AACrB,mBAAa,EAAE,MAAM;AACrB,aAAO,EAAE,KAAK;KACf,CAAC;AAClB,WAAO,SAAS,CAAC;GACpB,CAAA;;AAED,MAAI,oBAAoB,GAAG,SAAvB,oBAAoB,CAAY,CAAC,EAAC;;AAEpC,QAAI,IAAI,GAAG,CAAC,CAAC;;AAEb,QAAI,UAAU,GAAG,EAAE,CAAC;AACpB,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAC3B,UAAI,IAAI,GAAG,gBAAgB,EAAE,CAAC;AAC9B,gBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvB;;AAED,WAAO,UAAU,CAAC;GACnB,CAAA;;;;;;AAOD,QAAM,CAAC,SAAS,GAAG,YAAU;;AAE3B,UAAM,CAAC,GAAG,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC;GAC3C,CAAA;CAGA,CAAC,CAAC",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\n/******************************************************************************************\n                                         Angular Overhead\n*******************************************************************************************/\n\nvar app = angular.module('myApp', []);\n\napp.controller('myCtrl', function($scope) {\n\n\n\n\n\n/******************************************************************************************\n                                         Perceptron\n*******************************************************************************************/\n\n\n/****************************************\n * Input Variables:\n *   + Inputs Vector             phi(x)\n *     - Weights                 w\n *     - Input Values            x\n *     - SourceID                NodeID\n *\n *   + Bias                      b\n *\n * Node Variables:\n *  + Summing Function           SUM()\n *  + Activation Function        f(sum)\n *  + NodeID                     NodeID\n *\n * Output Variables:\n *   + Output Vector\n *     - Destination Node\n *     - Output Values\n *   + Error\n****************************************/\n$scope.input_1;\n$scope.input_2;\n$scope.outputTest;\n$scope.hiddenNodes;\n\n\n\nvar x_data = [1];\n\n\n/************************************************************\n                    Activation Functions\n\nBecause I designed my MLP to go between the values -1 and 1 I tweek some\nof the functions so that they would allow outputs between these values\nrather than have values starting from 0\n\nThe activation function array contains the encoding for each of these\n\n[0] = Step\n[1] = Sigmoid using Exp\n[2] = Sigmoid using tanh\n[3] = Piecwise Linear\n[4] = Gaussian\n*************************************************************/\n\n\nvar stepFunction = function(input,threshold){\n  if(input>=threshold){\n    //console.log(\"Step Function: \"+1);\n    return 1;\n  }\n  else{\n    //console.log(\"Step Function: \"+ (-1);\n    return -1;\n  }\n}\n\nvar sigmoidExp = function(input, constant){\n  input = input * constant;\n  var temp = (2/(1+Math.pow(Math.E, -input))) - 1;\n  //console.log(\"Exp Sigmoid: \"+temp);\n  return temp;\n\n}\n\nvar sigmoidTanh = function(input, constant){\n\n  var temp = Math.tanh(constant*input);\n  //console.log(\"Tanh Sigmoid: \"+temp);\n  return temp;\n\n}\n\nvar piecewiseLinear = function(input, bias, min, max){\n\n  if(input<=min){\n    //console.log(\"piecewiseLinear: \"+-1);\n    return -1;\n  }\n  if(input>=max){\n    //console.log(\"piecewiseLinear: \"+1);\n    return 1;\n  }\n  else {\n    var temp = input + bias;\n    //console.log(\"piecewiseLinear: \"+temp);\n    return (temp);\n  }\n\n}\n\nvar gaussian = function(input){\n\nvar gausConstant = 5/ Math.sqrt(2* Math.PI);\n\n\nvar temp = gausConstant * Math.exp(-5 * input * input) - 1;\n\n//console.log(\"Gaussian: \" + temp);\n\nreturn temp;\n\n}\n\n\n/***************************************\n            Perceptron Itself\n****************************************/\n\n\n\nvar perceptron = function(input, weights, activFunc){\n\n  //Reads and sets the weights and the input values, w() and x() in our perceptron\n  this.x = [];\n  this.x = input;\n  this.w = [];\n  this.w = weights;\n  this.activFunc = activFunc;\n\n//bias set to 0 for now.\n  var bias = 0;\n\n  this.sum = 0;\n  var tempSum = 0;\n\n  for (var i = this.x.length - 1; i >= 0; i--) {\n    tempSum = tempSum + (this.w[i]*this.x[i]);\n  };\n\n  tempSum = tempSum + bias;\n  this.sum = tempSum;\n\n  switch(activFunc){\n    case 0:\n          this.output = stepFunction(this.sum, 0);\n          break;\n    case 1:\n          this.output = sigmoidExp(this.sum, 6);\n          break;\n    case 2:\n          this.output = sigmoidTanh(this.sum, 2);\n          break;\n    case 3:\n          this.output =  piecewiseLinear(this.sum, 0, -0.5, 0.5);\n          break;\n    case 4:\n          this.output = gaussian(this.sum, 2);\n          break;\n    default:\n          this.output = sigmoidTanh(this.sum);\n          console.log(\"There was an error reading the assigned activation function to this node so the default sigmoid Tanh was used!\");\n  }\n\n}\n\n\n/***************************************\n           Topology Functions\n****************************************/\n\n\nvar singleInputLayer = function(input,weights, aFunc){\n  var input_1 = new perceptron(input, weights[0][0],aFunc[0]);\n\n  console.log(\"Input Layer (Single)\");\n  console.log(\"Input: \"+ input_1.x);\n  console.log(\"Weight: \"+ input_1.w);\n  console.log(\"Sum: \"+ input_1.sum);\n  console.log(\"Output: \"+ input_1.output);\n  console.log(\"------\");\n\n  return input_1;\n}\n\nvar hiddenLayer = function(inputNode, weights, aFunc){\n\n  var hidden_1 = new perceptron([inputNode.output], weights[1],aFunc[2]);\n  var hidden_2 = new perceptron([inputNode.output], weights[2],aFunc[3]);\n  var hidden_3 = new perceptron([inputNode.output], weights[3],aFunc[4]);\n  var hidden_4 = new perceptron([inputNode.output], weights[4],aFunc[5]);\n  var hidden_5 = new perceptron([inputNode.output], weights[5],aFunc[6]);\n\n  console.log(\"Hidden Layer outputs\");\n  console.log(\"1: \" + hidden_1.output);\n  console.log(\"2: \" + hidden_2.output);\n  console.log(\"3: \" + hidden_3.output);\n  console.log(\"4: \" + hidden_4.output);\n  console.log(\"5: \" + hidden_5.output);\n  /*console.log(\"Hidden Layer sum\");\n  console.log(\"1: \" + hidden_1.sum);\n  console.log(\"2: \" + hidden_2.sum);\n  console.log(\"3: \" + hidden_3.sum);\n  console.log(\"4: \" + hidden_4.sum);\n  console.log(\"5: \" + hidden_5.sum);*/\n  console.log(\"------\");\n\n  var hiddenNodes = [hidden_1, hidden_2, hidden_3, hidden_4 ,hidden_5];\n\n  return hiddenNodes;\n\n}\n\nvar outputLayer = function(hiddenNodes,weights,aFunc){\n  var outerLayer = new perceptron(\n        [hiddenNodes[0].output,\n         hiddenNodes[1].output,\n         hiddenNodes[2].output,\n         hiddenNodes[3].output,\n         hiddenNodes[4].output\n        ], weights[6], aFunc[7]);\n\n    console.log(\"OutputLayer\");\n    console.log(\"Sum: \" + outerLayer.sum);\n    console.log(\"Output: \" + outerLayer.output);\n    console.log(\"------\");\n\n    return outerLayer;\n}\n\n/***************************************\n  This function creates a new MLP with\n  random weights\n****************************************/\nvar createNewRandMLP = function(){\n  var weights = [[[Math.random()],[Math.random()]],\n               [Math.random()],\n               [Math.random()],\n               [Math.random()],\n               [Math.random()],\n               [Math.random()],\n               [Math.random(),Math.random(),Math.random(),Math.random(),Math.random()]\n               ];\n\n    var aFunc = [2,2,2,2,2,2,2,2];\n\n    var iLayer = singleInputLayer([Math.random()], weights, aFunc);\n    var hLayer = hiddenLayer(iLayer, weights, aFunc);\n    var oLayer = outputLayer(hLayer, weights, aFunc);\n\n    var error = iLayer.x[0] - oLayer.output;\n\n    var allLayers = {\n                      'weights': weights,\n                      'aFunc': aFunc,\n                      'inputLayer': iLayer,\n                      'hiddenLayer': hLayer,\n                      'outputLayer': oLayer,\n                      'error': error\n                    };\n    return allLayers;\n}\n\nvar initializePopulation = function(n){\n\n  var size = n;\n\n  var population = [];\n  for (var i = 0; i<size; i++) {\n    var temp = createNewRandMLP();\n    population.push(temp);\n  }\n\n  return population;\n}\n\n/***************************************\n      Test function to run as is\n****************************************/\n\n\n$scope.runTheMLP = function(){\n\n  $scope.mlp = initializePopulation(100000);\n}\n\n\n});"
  ]
}